\chapter{La soluzione proposta}
In questo capitolo discuteremo la soluzione intrapresa per lo sviluppo veloce di applicazioni mobile multi-piattaforma con le tecnologie scelte e le scelte progettuali intraprese. 
\section{Le Tecnologie Web}
Le tecnologie web sono sempre più utilizzate per lo sviluppo di applicazioni mobile multi-piattaforma, molti framework come \texttt{Ionic}, \texttt{Foundation}, \textt{Lungo} utilizzano già HTML5, CSS, Javascript per le loro librerie, ottimizzate per dispositivi mobili.\\
In particolare questi framewrok mettono a disposizione una serie di componenti già pronti come ad esempio bottoni, menù laterali, form, liste, tabelle, icone, etc\dots e consentono di abbinarli tra di loro come meglio si ritene, con la possibilità di personalizzarli ulteriormente.\\
\subsection{Ionic}
Tra i vari framework che utilizzano tecnologie web ho scelto Ionic
\subsubsection{Caratteristiche}
Ionic offre componenti e librerie pensati per uno sviluppo ibrido dell'applicazione, inoltre è stato sviluppato riducendo al minimo la manipolazione del DOM\footnote{Il Document Object Model (spesso abbreviato come DOM), letteralmente modello a oggetti del documento, è una forma di rappresentazione dei documenti strutturati come modello orientato agli oggetti.\citeauthor{wiki:dom}Manipolando gli oggetti delle pagine web, ad esempio con delle animazioni, introduciamo della computazione aggiuntiva al nostro browser che può rallentarne le prestazioni} garantendo performance molto competitive.\\

I componenti di Ionic sono tutti  

\subsection{AngularJS}
\section{Cordova}
\subsection{ngCordova}
\section{API Rest}
